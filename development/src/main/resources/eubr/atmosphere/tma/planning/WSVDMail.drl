package eubr.atmosphere.tma.planning

dialect "mvel"

import eubr.atmosphere.tma.planning.AdaptationManager
import eubr.atmosphere.tma.data.Action
import eubr.atmosphere.tma.data.Configuration
import eubr.atmosphere.tma.utils.TrustworthinessScore

declare TrustworthinessScore
      @role(event)
      @expires(1s)
      //@timestamp (eventDestinationTimestamp)
 end

rule "Score validation - Wildfly Scale up"
    when
        $score: TrustworthinessScore ( resourceConsumptionScore.score > 0.18, podCount < 2 )
    then
        Action action = new Action(2, "sendMail", 9, 2);
        action.addConfiguration(new Configuration(4, "message", "System with high resource consumption"));
        action.addConfiguration(new Configuration(5, "subject", "ALERT"));
        action.addConfiguration(new Configuration(6, "receiverEmail", "rslv560@gmail.com"));
        action.addConfiguration(new Configuration(7, "senderEmail", "rfsilva@student.dei.uc.pt"));
        action.addConfiguration(new Configuration(8, "senderPassword", "Cristianoronaldo7!"));
        action.addConfiguration(new Configuration(9, "smtpHost", "smtp.dei.uc.pt"));
        action.addConfiguration(new Configuration(9, "port", "587"));
        AdaptationManager.performAdaptation( action );
end
