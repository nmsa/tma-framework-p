package eubr.atmosphere.tma.planning
 
dialect "mvel"

import eubr.atmosphere.tma.planning.AdaptationManager
import eubr.atmosphere.tma.data.Action
import eubr.atmosphere.tma.data.Configuration
import eubr.atmosphere.tma.utils.TrustworthinessScore

declare TrustworthinessScore
      @role(event)
      @expires(1s)
      //@timestamp (eventDestinationTimestamp)
 end

rule "Privacy Score Validation - Increase PRIVAAS Anonymization"
    when
        $score: TrustworthinessScore ( privacyScore.score < privacyScore.threshold )
    then
        Action action = new Action(4, "update", 8, 35001);
		action.addConfiguration(new Configuration(1, "score", $score.privacyScore.score.toString()));
	    action.addConfiguration(new Configuration(2, "atributeID", $score.privacyScore.attributeId.toString()));
	    action.addConfiguration(new Configuration(3, "configProfileID", $score.privacyScore.configurationProfileId.toString()));
	    AdaptationManager.performAdaptation( action, AdaptationManager.obtainMetricData($score.privacyScore) );
end

rule "Privacy Score Validation - Not Increase PRIVAAS Anonymization"
    when
        $score: TrustworthinessScore ( privacyScore.score >= privacyScore.threshold )
    then
		Action action = new Action(4, "none", 8, 35001);
		action.addConfiguration(new Configuration(1, "score", $score.privacyScore.score.toString()));
	    action.addConfiguration(new Configuration(2, "atributeID", $score.privacyScore.attributeId.toString()));
	    action.addConfiguration(new Configuration(3, "configProfileID", $score.privacyScore.configurationProfileId.toString()));
	    AdaptationManager.performAdaptation( action, AdaptationManager.obtainMetricData($score.privacyScore) );
end